extends ../layout/index.pug

block content
  include ../includes/modules/header.pug
  
  main.main
    .details
      .details__intro
        .details__gallery--main
          +picture("background","room-exemple1")
        .details__gallery--up
          +picture("background","room-exemple2")
        .details__gallery--low
          +picture("background","room-exemple3")
      .details__info
        .container
          .details__columns
            .details__columns-left
              .details__boost
                .details__intelligence.intelligence
                  h2.intelligence__h2 Сведения о номере
                  ul.intelligence__list
                    mixin intelligenceList({icon="", descrTitle="", descrParagraph=""})
                      li.intelligence__item
                        .intelligence__emogy
                          i.material-icons.intelligence__icon= icon
                        .intelligence__descr
                          h3.intelligence__descr-h3= descrTitle
                          p.intelligence__decr-p= descrParagraph 
                    - let intelligenceItems = [{icon: "tag_faces", descrTitle: "Комфорт", descrParagraph: "Шумопоглощающие стены"},{icon: "location_city", descrTitle: "Удобство", descrParagraph: "Окно в каждой из спален"}, {icon: "whatshot", descrTitle: "Уют", descrParagraph: "Номер оснащён камином"}]
                    -for (let i=0; i<intelligenceItems.length; i++)       
                      +intelligenceList(intelligenceItems[i])
                .details__chart.chart
                  h2.chart__h2 Впечатления от номера
                  mixin pieChart(perfect, good, satisfactorily, bad)
                    - let position = {good, bad, perfect, satisfactorily}
                    - let totalCount = perfect + good + satisfactorily + bad
                    - let legend = {perfect:"Великолепно",good:"Хорошо",satisfactorily:"Удовлетворительно",bad:"Разочарован"}
                    .chart__pie-chart
                      .chart__group
                        svg(width="124" height="124" viewbox="0 0 34 34" fill="none" stroke-width="1")
                          defs
                            linearGradient(id="perfect" x1="0%" y1="0%" x2="0%" y2="100%")
                              stop(offset="0%" stop-color="#FFE39C")
                              stop(offset="100%" stop-color="#FFBA9C")
                            linearGradient(id="good" x1="0%" y1="0%" x2="100%" y2="0%")
                              stop(offset="0%" stop-color="#66D2EA")
                              stop(offset="100%" stop-color="#6FCF97")
                            linearGradient(id="satisfactorily" x1="0%" y1="0%" x2="0%" y2="100%")
                              stop(offset="0%" stop-color="#BC9CFF")
                              stop(offset="100%" stop-color="#8BA4F9")
                            linearGradient(id="bad" x1="0%" y1="0%" x2="0%" y2="100%")
                              stop(offset="0%" stop-color="#919191")
                              stop(offset="100%" stop-color="#3D4975")
                          - let previosOffset = 0
                          each value, voteColor in position
                            if value !== 0
                              - let gap = 1
                              - let dash = value * 100 / totalCount - gap
                              circle(r="15.9" stroke=`url(#${voteColor})` stroke-dasharray=`${dash} 100` stroke-dashoffset= previosOffset cx="50%" cy="50%")
                              - previosOffset = previosOffset - dash - gap   
                        p.chart__info
                          span.chart__count= totalCount 
                          +declOfNum(totalCount, ["голос", "голоса", "голосов"])
                      ul.chart__legend 
                        each item, voteColor in legend
                          li.chart__legend-item
                            svg(width=10 height=10)
                              circle(r=5 cx='50%' cy='50%' fill=`url(#${voteColor})`)
                            = item
                  +pieChart(130,65,65,0)
              .details__reviews.reviews
                - let reviewsItems= [{customerNum:1, count:11, customerName:"Мурад Сарафанов",wrightAgo:"5 дней назад", paragraph:"Великолепный матрас на кровати в основной спальне! А пуфик вообще потрясающий. И стены, действительно, шумоподавляющие. Выкрикивал комплименты повару — никто не жаловался из соседей."},{customerNum:2, count:2, customerName:"Патрисия Стёклышкова",wrightAgo:"Неделю назад", paragraph:"Обслуживание на высоте! Всё аккуратно, чисто. Завтраки в номер советую заказать, каждый день новое блюдо и десерт как комплимент"}]
                .reviews__titie
                  h2.reviews__h2 Отзывы посетителей номера
                  span.reviews__quantity
                    !=(reviewsItems.length) + "&nbsp;"
                    +declOfNum(reviewsItems.length, ["отзыв", "отзыва", "отзывов"])
                ul.reviews__list
                  mixin reviewsList({customerNum=0, count=0, liked=false, customerName="", wrightAgo="", paragraph=""})  
                    li.reviews__item
                      .reviews__avatar
                        +picture("customers", "customer" + customerNum)
                        .reviews__like
                          i.material-icons.reviews__icon="favorite_border"
                          span.reviews__like-num= count
                      .reviews__main
                        h3.reviews__name= customerName
                        span.reviews__ago= wrightAgo
                        p.reviews__p= paragraph 
                -for (let i=0; i<reviewsItems.length; i++)       
                   +reviewsList(reviewsItems[i])
              .details__end
                .details__rules
                  h2.details__rules-h2 Правила
                  ul.details__rules-list
                    -let rulesList=["Нельзя с питомцами","Без вечеринок и мероприятий","Время прибытия — после 13:00, <br>а выезд до 12:00"]
                    - for (let i=0; i<rulesList.length; i++) 
                      li.details__rules-item !{rulesList[i]}
                .details__cancel
                  h2.details__cancel-h2 Отмена
                  .details__cancel-p Бесплатная отмена в течение 48 ч. После <br>этого при отмене не позднее чем за 5 дн. до прибытия вы получите полный возврат за вычетом сбора за услуги.
            .details__columns-right
              .details__total.total
                mixin totalCalc(dailyCost,days,roomNum,isLux,servicesCost, add)
                  - let summCost = dailyCost * days
                  - let total = summCost + servicesCost + add
                  .total__identi
                    p.total__room № 
                      span.total__room-num= roomNum
                        if isLux
                          span.total__room-status= "люкс"
                    p.total__room-cost
                      span.total__room-price
                        +numWithSpaces(dailyCost)
                      |  в сутки
                  form.total__form(action="" method="")
                    .total__date
                      +dataInput("прибытие", "ДД.ММ.ГГГГ", "input-dropdown", "total__input--date","","19.08.2019")
                      +dataInput("выезд", "ДД.ММ.ГГГГ","input-dropdown", "total__input--date","","23.08.2019")
                    .total__guests
                      +dataInput("гости", "Сколько гостей","input-dropdown","total__input--guests","","3 гостя")
                    .total__count
                      table.total__count-table
                        tbody.total__count-tbody
                          tr.total__count-tr
                            td.total__count-td
                              +numWithSpaces(dailyCost)
                              =" x " + days + " "
                              +declOfNum(days, ["сутки", "суток", "суток"])
                            td.total__count-td
                              +numWithSpaces(summCost)
                          tr.total__count-tr
                            td.total__count-td Сбор за услуги
                              if servicesCost < 0 
                                | : скидка&nbsp;
                                +numWithSpaces(-servicesCost)
                                +hint("Скидка за подписку") 
                            td.total__count-td
                              if servicesCost > 0
                                +numWithSpaces(servicesCost)
                              else
                                | 0₽
                          tr.total__count-tr
                            td.total__count-td Сбор за дополнительные<br> услуги
                              if add > 0
                                +hint("Дополнительные удобства")
                            td.total__count-td
                              +numWithSpaces(add)
                        tfoot.total__count-tfoot
                          tr.total__count-tr
                            td.total__count-td  Итого
                              .total__count-dashed 
                            td.total__count-td
                              +numWithSpaces(total)
                      //-+totalCount(totalValue.cost, totalValue.days, -2179, 300)
                    +buttons("btn--arrow", "забронировать", "#")
                +totalCalc(9990,4,888,true,-2179, 300)
                  
               
  include ../includes/modules/footer.pug 