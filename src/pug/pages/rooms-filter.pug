extends ../layout/index.pug

include ../includes/modules/dropdown-select-counters.pug

block content
  include ../includes/modules/header.pug
  main.main
    .catalog
      .container
        .catalog__wrap
          aside.catalog__filter.filter
            form.filter__form(action="" method="")
              .filter__date
                +dataInput("даты пребывания в отеле", "ДД.ММ.ГГГГ", "input-dropdown", "date", "", '19 авг - 23 авг')
              .filter__guests
                - var guestItems = [{title: "Взрослые", count: 2, countWord: "Гости"},{title: "Дети", count: 1, countWord: "Гости"},{title: "Младенцы", count: 1}]
                +dropdownSelect(guestItems, false, "гости", "Сколько гостей", '3 гостя, 1 младенец')
              .filter__range
                .filter__range-title
                  h3 Диапазон цены
                  span#unconstrained-values
                #unconstrained
                p.filter__range-subtitle Стоимость за сутки пребывания в номере
              .filter__rules
                h3.filter__rules-h3 правила дома
                ul.filter__rules-list
                  - let inputRules = [{id:"rule1",title:"Можно курить"}, {id:"rule2",title: "Можно с питомцами",checked:"true"}, {id:"rule3",title: "Можно пригласить гостей (до&nbsp;10&nbsp;человек)", checked:"true"}]
                    each item in inputRules
                      li.checkbox.filter__rules-item
                        input.checkbox__input(
                          class="" 
                          type="checkbox"
                          id= item.id
                          checked= item.checked
                          )
                        label.checkbox__label.filter__rules-label(for= item.id) !{item.title}
              .filter__access
                h3.filter__access-h3 доступность
                ul.filter__access-list
                  - let inputAccess = [{id:"access1",title:"Широкий коридор", subtitle:"Ширина коридоров в номере <br>не менее 91 см."}, {id:"access2",title:"Помощник для инвалидов", subtitle:"На 1 этаже вас встретит специалист <br>и проводит до номера."}]
                    each item in inputAccess
                      li.checkbox.filter__access-item
                        input.checkbox__input.filter__access-input(
                          class="" 
                          type="checkbox"
                          id= item.id
                          checked= item.checked
                          )
                        label.checkbox__label.filter__access-label(for= item.id)
                          h3.filter__access-title=item.title
                          p.filter__access-sublabel !{item.subtitle}
              .filter__value
                - var comfortItems = [{title: "Спальни", count: 2},{title: "Кровати", count: 2},{title: "Ванные комнаты", count: 0}]
                +dropdownSelect(comfortItems,false, "удобства номера", "Выберите удобства", '2 спальни, 2 кровати...') 
              .filter__add
                details.filter__add-details
                  summary.filter__add-summary 
                    h3 дополнительные удобства
                  ul.filter__add-list
                    - let inputAdd = [{id:"add1",title:"Завтрак"}, {id:"add2",title:"Письменный стол",checked:"true"},{id:"add3",title:"Стул для кормления",checked:"true"},{id:"add4",title:"Кроватка",checked:"true"},{id:"add5",title:"Телевизор"},{id:"add6",title:"Шампунь"}]
                    each item in inputAdd
                      li.checkbox.filter__add-item
                        input.checkbox__input.filter__add-input(
                          class="" 
                          type="checkbox"
                          id= item.id
                          checked= item.checked
                          )
                        label.checkbox__label.filter__access-label(for= item.id)=item.title       
          section.catalog__rooms.rooms
            h1.rooms__h1 Номера<span class="quicksand">,</span> которые мы для вас подобрали
            .rooms__list
              - var roomsList = [{imgList:["888", "888", "888", "888"],number: 888, isLux: true, cost: 9990, rate: 5, reviewCount: 145},{imgList:["840", "840", "840", "840"],  number: 840, isLux: false, cost: 9900, rate: 4, reviewCount: 65},{imgList: ["980", "980", "980", "980"], number: 980, isLux: true, cost: 8500, rate: 3, reviewCount: 35},{imgList: ["856", "856", "856", "856"], number: 856, isLux: false, cost: 7300, rate: 5, reviewCount: 19},{imgList: ["740", "740", "740", "740"], number: 740, isLux: false, cost: 6000, rate: 4, reviewCount: 44},{imgList: ["982", "982", "982", "982"], number: 982, isLux: false, cost: 5800, rate: 3, reviewCount: 56},{imgList: ["678", "678", "678", "678"], number: 678, isLux: false, cost: 5500, rate: 5, reviewCount: 45},{imgList: ["450", "450", "450", "450"], number: 450, isLux: false, cost: 5300, rate: 4, reviewCount: 39},{imgList: ["350", "350", "350", "350"], number: 350, isLux: false, cost: 5000, rate: 3, reviewCount: 77},{imgList: ["666", "666", "666", "666"], number: 666, isLux: false, cost: 5000, rate: 5, reviewCount: 25},{imgList: ["444", "444", "444", "444"], number: 444, isLux: false, cost: 5000, rate: 3, reviewCount: 15},{imgList: ["352", "352", "352", "352"], number: 352, isLux: false, cost: 5000, rate: 3, reviewCount: 55}]; 
              mixin roomCard({imgList = [], number = 0, isLux = false, cost = 0, rate = 0, reviewCount = 0})
                .rooms__card
                  .rooms__photos
                    each img in imgList
                      mixin pictureRoom(img)  
                        img(src="./assets/img/search-rooms/" + img + '.png', class="rooms__img", alt="photo interier")
                      +pictureRoom(img)
                  a.rooms__details(href="room-details.html")
                    .rooms__details--wrap
                      .rooms__value
                        p.rooms__appartment  № 
                          span.rooms__num=number
                          if isLux 
                            span.rooms__status= 'люкс'
                        p.rooms__cost
                          span.rooms__price
                            +numWithSpaces(cost)
                          |  в сутки
                      .rooms__rating
                        mixin starsRating(rate)
                          .stars-rating
                            - for (let i=0; i<5; i++)
                              if rate>i
                                i.material-icons star
                              else 
                                i.material-icons star_border
                        +starsRating(rate)
                        p.rooms__reviews 
                          span.rooms__reviews-amount!= reviewCount
                            +declOfNum(reviewCount, [" Отзыв", " Отзыва", " Отзывов"]) 
              - for (let i=0; i<roomsList.length; i++) 
                +roomCard(roomsList[i])
            .rooms__paginator
              mixin paginator(countOnPage,countTotal, currentPage)
                - let roundCount = (countTotal >= 100) ? '100+' : countTotal
                - let pagesCount = Math.ceil(countTotal / countOnPage)
                .paginator
                  ul.paginator__list
                    if currentPage !== 1
                      li.paginator__item
                        a.paginator__page.paginator__arrow(href="javascript:void(0)")
                          i.material-icons arrow_back
                    - for (var i = 1; i <= pagesCount; i++)
                      - let utmostPage = (i === 1 || i === pagesCount)
                      - let neighborPage = (i <= currentPage + 2 && i >= currentPage - 2)
                        if i === currentPage
                          li.paginator__item
                            span.paginator__page.paginator__page--active(href="javascript:void(0)")= i
                        else if utmostPage || neighborPage
                          li.paginator__item
                            a.paginator__page.paginator__page--inactive(href="javascript:void(0)")= i
                        else if i === currentPage + 3 || i === currentPage - 3
                          li.paginator__item
                            span.paginator__page ...
                    if currentPage !== pagesCount
                      li.paginator__item
                        a.paginator__page.paginator__arrow(href="javascript:void(0)")
                          i.material-icons arrow_forward
                  - let startCount = currentPage === 1 ? currentPage : currentPage * countOnPage
                  - let endCount = countOnPage * currentPage
                  p.paginator__caption= `${startCount} – ${endCount} из ${roundCount} вариантов аренды`
              +paginator(12,180,1)
  include ../includes/modules/footer.pug 